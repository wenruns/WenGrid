<?php
/**
 * Created by PhpStorm.
 * User: wen
 * Date: 2019/10/26
 * Time: 15:48
 */

namespace vendor\WenGrid;


use Encore\Admin\Facades\Admin;
use Encore\Admin\Grid\Tools\ExportButton;
use GuzzleHttp\Client;

class WenExportButton extends ExportButton
{

    protected $key = '';

    protected function setUpScripts()
    {
        $head = json_encode($this->grid->getWenExporter()->getHead());
        $body = json_encode($this->grid->getWenExporter()->getBody());

        // TODO: Change the autogenerated stub
        $script = <<<SCRIPT
            var pageN_{$this->key} = 0; // 请求数据次数（第几次）
            var pageRange_{$this->key} = {}; // 导出页数（导出指定页数范围）
            var excelHtml_{$this->key} = ''; // 导出的excel表格
            var index_{$this->key} = 0;  // 导出的历史索引记录
            var data_{$this->key} = new Array(); // 导出的数据集合
            var cancel_{$this->key} = false;
            
            function initData(){
                pageN_{$this->key} = 0;
                pageRange_{$this->key} = {};
                excelHtml_{$this->key} = '';
                index_{$this->key} = 0;
                data_{$this->key} = [];
            }
            
            // 生成头部
            function makeHead(){
                excelHtml_{$this->key} = '<'+'html xmlns:o="urn:schemas-microsoft-com:office:office" ' +
                    'xmlns:x="urn:schemas-microsoft-com:office:excel" ' +
                    'xmlns="http://www.w3.org/TR/REC-html40"><head>' +
                    '<!--[if gte mso 9]>' +
                    '<xml>' +
                    '<x:ExcelWorkbook>' +
                    '   <x:ExcelWorksheets>' +
                    '       <x:ExcelWorksheet>' +
                    '           <x:Name><'+'/'+'x:Name>'+
                    '           <x:WorksheetOptions>' +
                    '               <x:DisplayGridlines'+'/'+'>' +
                    '           <'+'/'+'x:WorksheetOptions>' +
                    '       <'+'/'+'x:ExcelWorksheet>' +
                    '   <'+'/'+'x:ExcelWorksheets>' +
                    '<'+'/'+'x:ExcelWorkbook>' +
                    '<'+'/'+'xml>' +
                    '<![endif]-->' +
                    '<style>' +
                    "   .wen-excel-head{text-align: center;height: 34px; font-family:{$this->grid->getWenExporter()->setFontFamily()};}" +
                    "   .wen-excel-body{text-align: center;height: 28px; font-family:{$this->grid->getWenExporter()->setFontFamily()};}" +
                    "   .wen-excel-statistic{text-align: left !important;height: 28px; font-family:{$this->grid->getWenExporter()->setFontFamily()};}" +
                    '<'+'/style>' +
                    '</head><body><table><thead><tr>';
                var head = {$head};
                for (var i in head) {
                    excelHtml_{$this->key} += '<th class="wen-excel-head">'+head[i]+'</th>'
                }
                excelHtml_{$this->key} += '</tr></thead><tbody>';
            }
            
            
            // 生成主体
            function makeBody(){
                var body = {$body};
                var formatFunc = {$this->grid->getWenExporter()->setFormat()};
                /*console.log('func ==> ', formatFunc, {$head}, body, data_{$this->key});*/
                for (var i = index_{$this->key}; i < data_{$this->key}.length; i++) {
                    var item = data_{$this->key}[i];
                    <!--console.log(item);-->
                    for (var j = 0; j < item.length; j++) {
                        excelHtml_{$this->key} += '<tr>'; 
                        for (var field in body) {
                            <!--console.log(body[field]);-->
                            excelHtml_{$this->key} += '<td class="wen-excel-body">' + formatFunc(item[j], body[field]) +'</td>';
                        }
                        excelHtml_{$this->key} += '</tr>'; 
                    }
                    index_{$this->key}++;
                }
            }
            
            // 生成脚部
            function makeFooter(){
                var footer = '{$this->grid->getWenExporter()->setFooter()}';
                if (footer) {
                    var head = {$head};
                    excelHtml_{$this->key} += '<tr><td colspan="'+ head.length +'" class="wen-excel-statistic">'+ footer +'</td></tr>'
                }
                excelHtml_{$this->key} += '<'+'/tbody><'+'/table><'+'/body><'+'/html>';
            }
            
            
            function download(){
                /*console.log(excelHtml_{$this->key});*/
                // 生成excel表格
                let blob = new Blob([excelHtml_{$this->key}], {
                    type: 'application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' //,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
                })
                if (window.navigator.msSaveOrOpenBlob) {
                    navigator.msSaveBlob(blob);
                } else {
                    let elink = document.createElement('a');
                    elink.download = "{$this->grid->getWenExporter()->getFileName()}.{$this->grid->getWenExporter()->getType()}";
                    elink.style.display = 'none';
                    elink._target = 'blank';
                    elink.href = URL.createObjectURL(blob);
                    document.body.appendChild(elink);
                    elink.click();
                    document.body.removeChild(elink);
                }
                hideTipsBox();
            }
            
            function hideTipsBox(){
                $(".wen-tips-box-{$this->key}").addClass('wen-hide');
            }
            
            function showTipsBox(){
                $(".wen-tips-box-{$this->key}").removeClass('wen-hide');
            }
        
            
            
        
            function getData(event){
                if (cancel_{$this->key}) {
                    return;
                }
                var target = event.target.getAttribute('data-target');
                var url = event.target.getAttribute('data-href');
                var data = {
                    pageN: pageN_{$this->key},
                    per_page: {$this->grid->perPage}
                };
                switch (target) {
                    case 'all':
                        break;
                    case 'page':
                        break;
                    case 'selected':
                        url += {$this->grid->getSelectedRowsName()}().join(',')
                        break;
                    case 'pages':
                        if (!Object.keys(pageRange_{$this->key}).length) {
                            hideTipsBox();
                            Swal.fire({
                                title: '请选择导出页数范围', //标题
                                html: '<div>第&nbsp;<input type="text" id="rangePage-start" style="width:80px;line-height: 25px;text-align:center;font-size:18px;"> — <input type="text" id="rangePage-end" style="width:80px;line-height: 25px;text-align:center;font-size:18px;">&nbsp;&nbsp;页<\/div>', // HTML
                                confirmButtonColor: '#3085d6',// 确定按钮的 颜色
                                confirmButtonText: '确定',// 确定按钮的 文字
                                allowOutsideClick:false,
                                showCancelButton:true,
                                cancelButtonText: '取消',
                            }).then((isConfirm) => {
                                try {
                                    //判断 是否 点击的 确定按钮
                                    if (isConfirm.value) {
                                        let startPage = $("#rangePage-start").val();
                                        let endPage = $("#rangePage-end").val();
                                        // console.log(startPage, endPage)
                                        pageRange_{$this->key} = {
                                            start: startPage,
                                            end: endPage,
                                        }
                                        getData(event);
                                    }
                                } catch (e) {
                                    alert(e);
                                }
                            });
                            return false;
                        }
                        url += 'all';
                        showTipsBox();
                        data.pageRange = pageRange_{$this->key};
                        break;
                    default:
                        
                }
                <!--console.log(url, data);-->
                
                // 发送ajax请求
                ajaxRequest = $.ajax({
                    url: url,
                    method: 'GET',
                    // contentType:"application/json",
                    responseType: 'json',
                    data: data,
                    success: function(res) {
                        <!--console.log('responseText => ', res);-->
                        res = JSON.parse(res)
                        <!--console.log('response ==> ', res);-->
                        if (res.data.length > 0) {
                            data_{$this->key}.push(res.data);
                        }
                        makeBody();
                        // 判断数据获取完成
                        if(res.finished == true) {
                            makeFooter();
                            // 导出excel
                            download();
                        } else {
                            // 轮询查询数据
                            pageN_{$this->key}++;
                            getData(event);
                        }
                    },
                    fail: function(err) {
                        /*initData();*/
                        console.warn(err)
                    }
                });
            }
            
            
            // 导出点击事件
            $('.wen-dropdown-menu-{$this->key}').click(function(e){
                showTipsBox();
                cancel_{$this->key} = false;
                initData();
                makeHead();
                getData(e);
            });

            // 取消导出
            $('.wen-cancel-export-btn-{$this->key}').click(function(e){
                hideTipsBox();
                cancel_{$this->key} = true;
                initData();
            });

SCRIPT;

        Admin::script($script);
    }

    public function render()
    {
        // TODO: Change the autogenerated stub
        if (!$this->grid->showExportBtn()) {
            return '';
        }
        $this->key = mt_rand(0000, 9999) . date('ymdHis');
        $this->setUpScripts();

        $export = trans('admin.export');
        $all = trans('admin.all');
        $currentPage = trans('admin.current_page');
        $selectedRows = trans('admin.selected_rows');

        $page = request('page', 1);
        return <<<EOT
<style>
        .wen-dropdown-bgBox-{$this->key}{
            width: 100vw;
            height: 100vh;
            background: black;
            opacity: 0.5;
            position: fixed;
            top: 0px;
            left: 0px;
            z-index: 100;
        }
        .wen-dropdown-tipsBox-{$this->key}{
            width: 100vw;
            height: 100vh;
            position: fixed;
            z-index: 101;
            left: 0vw;
            top: 0vh;
            border: 1px solid red;
        }
        .wen-dropdown-tipsBox-{$this->key} .wen-dropdown-tipsBox{
            width: 200px;
            height: 200px;
            background: white;
            border-radius: 5px;
            margin: 30vh auto;
        }
        .wen-change-{$this->key}{
            width: 40%;
            margin-top: 15%;
            -webkit-animation:mymove 2s infinite;
            animation: mymove 2s infinite;
        }
        
        .wen-hide{
            display: none;
        }

        @keyframes mymove
        {
            0% {-webkit-transform:rotate(0deg);}
            50% {-webkit-transform:rotate(180deg);}
            100% {-webkit-transform:rotate(360deg);}
        }
        @-webkit-keyframes mymove /*Safari and Chrome*/
        {
            0% {-webkit-transform:rotate(0deg);}
            50% {-webkit-transform:rotate(180deg);}
            100% {-webkit-transform:rotate(360deg);}
        }
</style>
<div class="wen-tips-box-{$this->key} wen-hide">
    <div class="wen-dropdown-bgBox-{$this->key}"></div>
    <div class="wen-dropdown-tipsBox-{$this->key}">
        <div class="wen-dropdown-tipsBox">
            <div style="height: 75%;text-align: center;">
                <img class="wen-change-{$this->key}" src="/images/static/loading.png" alt="">
                <div>正在导出</div>
            </div>
            <div style="text-align: center;">
                <span class="btn-warning btn wen-cancel-export-btn-{$this->key}" style="height: 30px;line-height: 18px;">取消</span>
            </div>    
        </div>   
    </div>
</div>

<div class="btn-group pull-right" style="margin-right: 10px">
    <a class="btn btn-sm btn-twitter" title="{$export}"><i class="fa fa-download"></i><span class="hidden-xs"> {$export}</span></a>
    <button type="button" class="btn btn-sm btn-twitter dropdown-toggle" data-toggle="dropdown">
        <span class="caret"></span>
        <span class="sr-only">Toggle Dropdown</span>
    </button>
    <ul class="dropdown-menu wen-dropdown-menu-{$this->key}" role="menu">
        <li><a data-target="all" data-href="{$this->grid->getExportUrl('all')}" target="_blank">{$all}</a></li>
        <li><a data-target="page" data-page="{$page}" data-href="{$this->grid->getExportUrl('page', $page)}" target="_blank">{$currentPage}</a></li>
        <li><a data-target="selected" data-href="{$this->grid->getExportUrl('selected')}" target="_blank" class='{$this->grid->getExportSelectedName()}'>{$selectedRows}</a></li>
        <li><a data-target="pages" data-href="{$this->grid->getExportUrl('page')}">导出指定页</a></li>
    </ul>
</div>
EOT;
    }

}